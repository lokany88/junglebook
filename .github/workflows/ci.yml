name: ci

on:
  pull_request:
    branches: [main]

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      has_apps: ${{ steps.set.outputs.has_apps }}
    steps:
      - uses: actions/checkout@v4

      - name: Discover apps
        id: set
        run: |
          if [ -d "apps/dashboard-charts/apps/web" ]; then
            echo "has_apps=true" >> $GITHUB_OUTPUT
          else
            echo "has_apps=false" >> $GITHUB_OUTPUT
          fi

  lint-format:
    runs-on: ubuntu-latest
    needs: discover
    if: ${{ needs.discover.outputs.has_apps == 'true' }}
    timeout-minutes: 5
    defaults:
      run:
        working-directory: apps/dashboard-charts/apps/web
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: apps/dashboard-charts/apps/web/package-lock.json

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('apps/dashboard-charts/apps/web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - run: npm ci --prefer-offline

      - name: Run lint with PR annotations
        run: npm run lint --if-present -- --format github

      - name: Run format check
        run: npm run format --if-present

      - name: Upload lint results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: ./eslint-report.log
          if-no-files-found: ignore

  build-audit:
    runs-on: ubuntu-latest
    needs: lint-format
    if: ${{ needs.discover.outputs.has_apps == 'true' }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        slug: [dashboard-charts]
    defaults:
      run:
        working-directory: apps/${{ matrix.slug }}/apps/web
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: apps/${{ matrix.slug }}/apps/web/package-lock.json

      - run: npm ci --prefer-offline

      - run: npm run build --if-present

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.slug }}
          path: apps/${{ matrix.slug }}/apps/web/.next
          if-no-files-found: ignore

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-audit
    if: ${{ needs.discover.outputs.has_apps == 'true' }}
    steps:
      - run: echo "ðŸš€ Deploying staging..."

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: ${{ needs.discover.outputs.has_apps == 'true' }}
    steps:
      - run: echo "ðŸš€ Deploying production..."

  status_summary:
    runs-on: ubuntu-latest
    needs: [discover, lint-format, build-audit, deploy-staging, deploy-prod]
    if: always()
    steps:
      - name: Status summary
        run: |
          echo "âœ… CI Workflow Summary"
          echo "discover: ${{ needs.discover.result }}"
          echo "lint-format: ${{ needs.lint-format.result }}"
          echo "build-audit: ${{ needs.build-audit.result }}"
          echo "deploy-staging: ${{ needs.deploy-staging.result }}"
          echo "deploy-prod: ${{ needs.deploy-prod.result }}"

