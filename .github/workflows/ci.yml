name: Pro CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [apps/dashboard-charts/apps/web] # add more apps here later

    defaults:
      run:
        working-directory: ${{ matrix.app }}

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js with npm cache (using root lockfile)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      # 3. Cache Next.js build (per app)
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: apps/dashboard-charts/apps/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # 4. Install dependencies
      - name: Install dependencies
        run: npm install

      # 5. Lint (writes JSON report)
      - name: Lint
        run: npm run lint -- --format json --output-file eslint-report.json
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report-apps-dashboard-charts-apps-web
          path: apps/dashboard-charts/apps/web/eslint-report.json

      # 6. Type check (writes text report)
      - name: Type check
        run: npm run type-check -- --pretty false --noEmit > tsc-report.txt 2>&1
        continue-on-error: true

      - name: Upload TypeScript report
        uses: actions/upload-artifact@v4
        with:
          name: tsc-report-apps-dashboard-charts-apps-web
          path: apps/dashboard-charts/apps/web/tsc-report.txt

      # 7. Comment summary on PR (safe, never fails)
      - name: Comment summary on PR (lint & type-check)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            âœ… CI finished lint and type-check for `${{ matrix.app }}`.
            ðŸ“¦ Download detailed reports from workflow artifacts:
            â€¢ eslint-report.json
            â€¢ tsc-report.txt

      # 8. Run tests (wonâ€™t fail if none exist)
      - name: Run tests
        run: npm test || echo "No tests found"

      # 9. Build app
      - name: Build
        run: npm run build

