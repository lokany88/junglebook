name: Pro CI

on:
  push:
  pull_request:

# ✅ Give workflow permission to comment on PRs
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [apps/dashboard-charts/apps/web] # add more apps later if needed

    defaults:
      run:
        working-directory: ${{ matrix.app }}

    steps:
      # 1. Checkout repo (fetch full history to avoid git errors)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Node.js and cache npm using root lockfile
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      # 3. Cache Next.js build for speed
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: apps/dashboard-charts/apps/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # 4. Install dependencies
      - name: Install dependencies
        run: npm install

      # 5. Lint and save JSON report
      - name: Lint
        run: npm run lint -- --format json --output-file eslint-report.json
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report-apps-dashboard-charts-apps-web
          path: apps/dashboard-charts/apps/web/eslint-report.json

      # 6. Type check and save report
      - name: Type check
        run: npm run type-check -- --pretty false --noEmit > tsc-report.txt 2>&1
        continue-on-error: true

      - name: Upload TypeScript report
        uses: actions/upload-artifact@v4
        with:
          name: tsc-report-apps-dashboard-charts-apps-web
          path: apps/dashboard-charts/apps/web/tsc-report.txt

      # 7. Comment summary on PR (safe)
- name: Comment PR with audit results
  if: always() && github.event_name == 'pull_request'
  uses: marocchino/sticky-pull-request-comment@v2
  with:
    header: ci-results
    message: |
      ✅ CI completed for ${{ github.sha }}
      - Build status: ${{ job.status }}

      # 8. Run tests (won’t fail if none exist)
      - name: Run tests
        run: npm test || echo "No tests found"

      # 9. Build app
      - name: Build
        run: npm run build

