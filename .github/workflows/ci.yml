name: JungleBook Monorepo CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  discover:
    name: Discover Buildable Workspaces
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.filter.outputs.apps }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover buildable apps (JSON-safe)
        id: filter
        run: |
          echo "🔍 Scanning for buildable apps..."
          buildable_apps=$(find apps -type f -name package.json \
            | grep -v "\.open-next" \
            | grep -v "node_modules" \
            | grep -v "junglebook" \
            | sort -u | xargs -n1 dirname)

          echo "Found buildable apps:"
          echo "$buildable_apps"

          json_array=$(printf '%s\n' "$buildable_apps" | jq -R . | jq -s .)
          echo "apps=$json_array" >> $GITHUB_OUTPUT

  build:
    name: Lint • Type Check • Build
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.discover.outputs.apps) }}

    defaults:
      run:
        working-directory: ${{ matrix.app }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --workspace $(basename "${{ matrix.app }}")

      - name: Prettier check
        run: npx prettier --check "**/*.{js,ts,jsx,tsx,css,md}"

      - name: ESLint check
        run: npm run lint --workspace $(basename "${{ matrix.app }}") --if-present -- --max-warnings=0

      - name: TypeScript check
        run: npm run type-check --workspace $(basename "${{ matrix.app }}") --if-present

      - name: Build project
        run: npm run build --workspace $(basename "${{ matrix.app }}") --if-present

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-artifacts
          path: |
            ${{ matrix.app }}/.next
            ${{ matrix.app }}/dist
            ${{ matrix.app }}/build

