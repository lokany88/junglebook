name: CI Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      promote_prod:
        description: "Promote to production?"
        type: boolean
        default: false

env:
  NODE_VERSION: 20
  PYTHON_VERSION: "3.11"

jobs:
  discover:
    name: Discover Apps
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has_apps: ${{ steps.set-matrix.outputs.has_apps }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          apps=$(ls apps || true)
          if [ -z "$apps" ]; then
            echo "matrix=[]" >> $GITHUB_OUTPUT
            echo "has_apps=false" >> $GITHUB_OUTPUT
          else
            json=$(printf '%s\n' $apps | jq -R . | jq -s '{include: map({slug: .})}')
            echo "matrix=$json" >> $GITHUB_OUTPUT
            echo "has_apps=true" >> $GITHUB_OUTPUT
          fi

  build_audit:
    name: Build & Audit (${{ matrix.slug }})
    runs-on: ubuntu-latest
    needs: discover
    if: needs.discover.outputs.has_apps == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    defaults:
      run:
        working-directory: apps/${{ matrix.slug }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Node deps
        run: npm ci || npm install

      - name: Build App
        run: npm run build || true

      - name: Run Prettier
        run: npx prettier --check . || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install JungleBook CLI + audit deps
        run: pip install -e ../../jb || true

      - name: Run Black (Python formatting)
        run: black --check ../../jb || true

      - name: Run jb audit
        run: jb audit || true

      - name: Ensure Audit Report exists
        run: |
          mkdir -p apps/${{ matrix.slug }}/audit
          if [ ! -f apps/${{ matrix.slug }}/audit/AuditReport.md ]; then
            echo "# Audit Report for ${{ matrix.slug }}" > apps/${{ matrix.slug }}/audit/AuditReport.md
            echo "_Auto-generated placeholder (no results)_" >> apps/${{ matrix.slug }}/audit/AuditReport.md
          fi

      - name: Upload Audit Report
        uses: actions/upload-artifact@v4
        with:
          name: audit-${{ matrix.slug }}
          path: apps/${{ matrix.slug }}/audit/AuditReport.md
          if-no-files-found: ignore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.slug }}
          path: |
            apps/${{ matrix.slug }}/.open-next/**
            apps/${{ matrix.slug }}/.next/**
          if-no-files-found: ignore

  deploy_staging:
    name: Deploy Staging (${{ matrix.slug }})
    runs-on: ubuntu-latest
    needs: build_audit
    if: needs.discover.outputs.has_apps == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    defaults:
      run:
        working-directory: apps/${{ matrix.slug }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Wrangler
        run: npm i -g wrangler@4.40.2

      - name: Cloudflare Deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [ -f package.json ]; then
            npm run cf:build || true
            npm run cf:deploy || true
          fi

  promote_production:
    name: Promote to Production (${{ matrix.slug }})
    runs-on: ubuntu-latest
    needs: deploy_staging
    if: github.event_name == 'workflow_dispatch' && inputs.promote_prod == true && needs.discover.outputs.has_apps == 'true'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cloudflare Promote
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npm run cf:promote || true

